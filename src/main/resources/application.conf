akka {
  loglevel = DEBUG
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
  loggers = [de.heikoseeberger.akkalog4j.Log4jLogger]
  logging-filter = de.heikoseeberger.akkalog4j.Log4jLoggingFilter

  actor {
    warn-about-java-serializer-usage = off
  }
}

http {
  interface = "0.0.0.0"
  interface = ${?NIC_IP}
  port = 8283
  port = ${?NIC_PORT}
  self-timeout = 10000 ms
}

auth {
  cognito = "https://cognito-idp.eu-central-1.amazonaws.com/eu-central-1_ABCDEF/.well-known/jwks.json"
  cognito = ${?USER_POOL}
  allow-all = false
}

database {
  db {
    url = "jdbc:postgresql://localhost/akkaliftmldata"
    url = ${?SQL_URL}
    user = "test"
    user = ${?SQL_USER}
    password = "test"
    password = ${?SQL_PASSWORD}
  }
    profile = "slick.jdbc.PostgresProfile$"
}

mlconfig {
  fs {
    target = "s3"
    ratings-format = "com.databricks.spark.csv"
    load-last-on-startup = true
  }

  aws {
    location = "s3n://innfustest/"
    access-key-id = "AKIAIR45QSN4R75GRCHQ"
    secret-access-key = "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"
  }

  spark {
    default-master = "local[*]"
    port = 4040
    app-name = "MLTrainer"
    executor-memory = "4G"
    driver-memory = "4G"
    jar = "/opt/akkaliftml/akkaliftml_2.11-0.1-SNAPSHOT.jar"
  }

  als {
    timeout = 100000 ms
  }
}
